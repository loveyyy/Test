package Utils;

import android.graphics.Color;
import android.graphics.Point;
import android.graphics.Typeface;

import java.util.ArrayList;
import java.util.List;

import lecho.lib.hellocharts.model.Axis;
import lecho.lib.hellocharts.model.AxisValue;
import lecho.lib.hellocharts.model.Line;
import lecho.lib.hellocharts.model.LineChartData;
import lecho.lib.hellocharts.model.PointValue;
import lecho.lib.hellocharts.model.ValueShape;

public class ChatUtils {

   public static LineChartData getChat(String[] date ,int[] score){
//       "#FFCD41"
       getAxisXLables(date);
       getAxisPoints(score);
       LineChartData data = new LineChartData();
       initLineChart(data);
       return   data;
   }
    private static List<PointValue> mPointValues = new ArrayList<PointValue>();
    private static List<AxisValue> mAxisXValues = new ArrayList<AxisValue>();
    private  static String[] datey = {"0","10","20","30","40","50","60"};
    /**
     * 设置X 轴的显示
     */
    private static void getAxisXLables(String[] date) {
        for (int i = 0; i < date.length; i++) {
            mAxisXValues.add(new AxisValue(i).setLabel(date[i]));
        }
    }


    /**
     * 图表的每个点的显示
     */
    private static void getAxisPoints(int[] score) {
        for (int i = 0; i < score.length; i++) {
            mPointValues.add(new PointValue(i, score[i]));
        }
    }
    private static void initLineChart(LineChartData data){

        Line line = new Line(mPointValues).setColor(Color.parseColor("#97FFFF"));  //折线的颜色（橙色）
        List<Line> lines = new ArrayList<Line>();
        line.setShape(ValueShape.CIRCLE);//折线图上每个数据点的形状  这里是圆形 （有三种 ：ValueShape.SQUARE  ValueShape.CIRCLE  ValueShape.DIAMOND）
        line.setCubic(true);//曲线是否平滑，即是曲线还是折线
        line.setFilled(true);//是否填充曲线的面积
        line.setPointRadius(4);//设置坐标点图形大小
//        line.setHasLabels(true);//曲线的数据坐标是否加上备注
        line.setHasLabelsOnlyForSelected(true);//点击数据坐标提示数据（设置了这个line.setHasLabels(true);就无效）
        line.setHasLines(true);//是否用线显示。如果为false 则没有曲线只有点显示
        line.setHasPoints(true);//是否显示圆点 如果为false 则没有原点只有点显示（每个数据点都是个大的圆点）
        lines.add(line);
        data.setLines(lines);

        //坐标轴
        Axis axisX = new Axis(); //X轴
        axisX.setHasTiltedLabels(false);  //X坐标轴字体是斜的显示还是直的，true是斜的显示
        axisX.setTextColor(Color.BLACK);  //设置字体颜色
        //axisX.setName("date");  //表格名称
        axisX.setTextSize(14);//设置字体大小
        axisX.setMaxLabelChars(3); //字符最大多长
        axisX.setValues(mAxisXValues);  //填充X轴的坐标名称
        data.setAxisXBottom(axisX); //x 轴在底部
        //data.setAxisXTop(axisX);  //x 轴在顶部
        axisX.setHasLines(false); //x 轴分割线

        Axis axisY = new Axis().setHasLines(false);
        axisY.setHasSeparationLine(true);
        axisY.setLineColor(Color.parseColor("#97FFFF"));
        axisY.setMaxLabelChars(0);//max label length, for example 60
        axisY.setTextColor(Color.BLACK);
        axisY.setTextSize(16);//设置字体大小
        axisY.setInside(true);
        axisY.setAutoGenerated(true);
        data.setAxisYLeft(axisY);
    }

}
